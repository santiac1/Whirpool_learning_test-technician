Starting deployment of DIVL7/whirlpool_learning:main to localhost.
Preparing container with helper image: ghcr.io/coollabsio/coolify-helper:1.0.8.
Starting graceful shutdown container: r8wskwwgccwskck0koscc800
[CMD]: docker inspect -f '{{.State.Running}}' r8wskwwgccwskck0koscc800
Error: No such object: r8wskwwgccwskck0koscc800
[CMD]: docker rm -f r8wskwwgccwskck0koscc800
Error response from daemon: No such container: r8wskwwgccwskck0koscc800
[CMD]: docker run -d --network coolify --name r8wskwwgccwskck0koscc800 --rm -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/coollabsio/coolify-helper:1.0.8
d72f600e421686149823783b709ca2ebb4f2070ba1468852e46eb6f056283b2e
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'GIT_SSH_COMMAND="ssh -o ConnectTimeout=30 -p 22 -o Port=22 -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git ls-remote https://x-access-token:<REDACTED>@github.com/DIVL7/whirlpool_learning.git main'
cb13880fe613d5b373d69b02825c496f4a6f86b9	refs/heads/main
----------------------------------------
Importing DIVL7/whirlpool_learning:main (commit sha HEAD) to /artifacts/r8wskwwgccwskck0koscc800.
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'git clone -b "main" https://x-access-token:<REDACTED>@github.com/DIVL7/whirlpool_learning.git /artifacts/r8wskwwgccwskck0koscc800 && cd /artifacts/r8wskwwgccwskck0koscc800 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git submodule update --init --recursive && cd /artifacts/r8wskwwgccwskck0koscc800 && GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git lfs pull'
Cloning into '/artifacts/r8wskwwgccwskck0koscc800'...
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'cd /artifacts/r8wskwwgccwskck0koscc800 && git log -1 cb13880fe613d5b373d69b02825c496f4a6f86b9 --pretty=%B'
Nueva sección "Módulos" y modificaciónes al aspecto visual de las notificaciones
Image not found (gg04kkc4c4g8okw4og840sk4:cb13880fe613d5b373d69b02825c496f4a6f86b9). Building new image.
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'cat /artifacts/r8wskwwgccwskck0koscc800/Dockerfile'
FROM node:18-alpine
WORKDIR /app
# Copy package.json and package-lock.json
COPY package*.json ./
# Install dependencies
RUN npm install --production
# Copy the rest of the application
COPY . .
# Set environment variables with placeholders
ENV NODE_ENV=production
ENV PORT=3000
# Expose the port your app runs on
EXPOSE 3000
# Command to run the application
CMD ["node", "server.js"]
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'cat /artifacts/r8wskwwgccwskck0koscc800/Dockerfile'
FROM node:18-alpine
WORKDIR /app
# Copy package.json and package-lock.json
COPY package*.json ./
# Install dependencies
RUN npm install --production
# Copy the rest of the application
COPY . .
# Set environment variables with placeholders
ENV NODE_ENV=production
ENV PORT=3000
# Expose the port your app runs on
EXPOSE 3000
# Command to run the application
CMD ["node", "server.js"]
----------------------------------------
Building docker image started.
To check the current progress, click on Show Debug Logs.
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'cat /artifacts/build.sh'
docker build  --add-host coolify:172.18.0.4 --add-host coolify-db:172.18.0.6 --add-host coolify-realtime:172.18.0.2 --add-host coolify-redis:172.18.0.8 --add-host oowks4w8c48kk448848o8gsg:172.18.0.3 --network host -f /artifacts/r8wskwwgccwskck0koscc800/Dockerfile --build-arg SOURCE_COMMIT='cb13880fe613d5b373d69b02825c496f4a6f86b9' --build-arg 'COOLIFY_URL=http://gg04kkc4c4g8okw4og840sk4.40.76.141.244.sslip.io' --build-arg 'COOLIFY_FQDN=gg04kkc4c4g8okw4og840sk4.40.76.141.244.sslip.io' --build-arg 'COOLIFY_BRANCH="main"' --build-arg 'COOLIFY_RESOURCE_UUID=gg04kkc4c4g8okw4og840sk4' --build-arg 'COOLIFY_CONTAINER_NAME=gg04kkc4c4g8okw4og840sk4-022428469075' --progress plain -t gg04kkc4c4g8okw4og840sk4:cb13880fe613d5b373d69b02825c496f4a6f86b9 /artifacts/r8wskwwgccwskck0koscc800
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'bash /artifacts/build.sh'
#0 building with "default" instance using docker driver
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 428B done
#1 DONE 0.1s
#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s
#3 [internal] load .dockerignore
#3 transferring context: 107B done
#3 DONE 0.1s
#4 [1/5] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s
#5 [internal] load build context
#5 transferring context: 489.89kB 0.0s done
#5 DONE 0.1s
#6 [2/5] WORKDIR /app
#6 CACHED
#7 [3/5] COPY package*.json ./
#7 CACHED
#8 [4/5] RUN npm install --production
#8 0.316 npm warn config production Use `--omit=dev` instead.
#8 3.403
#8 3.403 added 107 packages, and audited 108 packages in 3s
#8 3.403
#8 3.403 17 packages are looking for funding
#8 3.403   run `npm fund` for details
#8 3.403
#8 3.403 found 0 vulnerabilities
#8 3.412 npm notice
#8 3.412 npm notice New major version of npm available! 10.8.2 -> 11.2.0
#8 3.412 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.2.0
#8 3.412 npm notice To update run: npm install -g npm@11.2.0
#8 3.412 npm notice
#8 DONE 3.6s
#9 [5/5] COPY . .
#9 DONE 0.5s
#10 exporting to image
#10 exporting layers
#10 exporting layers 1.3s done
#10 writing image sha256:19b4df52f34a6f42b01821dd126a017b645d73b3dacc1e9c15b7fbbe38d66c39
#10 writing image sha256:19b4df52f34a6f42b01821dd126a017b645d73b3dacc1e9c15b7fbbe38d66c39 0.0s done
#10 naming to docker.io/library/gg04kkc4c4g8okw4og840sk4:cb13880fe613d5b373d69b02825c496f4a6f86b9 0.0s done
#10 DONE 1.4s
Building docker image completed.
----------------------------------------
Rolling update started.
[CMD]: docker exec r8wskwwgccwskck0koscc800 bash -c 'SOURCE_COMMIT=cb13880fe613d5b373d69b02825c496f4a6f86b9 COOLIFY_FQDN=http://gg04kkc4c4g8okw4og840sk4.40.76.141.244.sslip.io COOLIFY_URL=gg04kkc4c4g8okw4og840sk4.40.76.141.244.sslip.io COOLIFY_BRANCH=main  docker compose --project-name gg04kkc4c4g8okw4og840sk4 --project-directory /artifacts/r8wskwwgccwskck0koscc800 -f /artifacts/r8wskwwgccwskck0koscc800/docker-compose.yaml up --build -d'
time="2025-04-07T02:24:42Z" level=warning msg="Found orphan containers ([gg04kkc4c4g8okw4og840sk4-021329969058]) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up."
Container gg04kkc4c4g8okw4og840sk4-022428469075  Creating
gg04kkc4c4g8okw4og840sk4-022428469075 Your kernel does not support memory swappiness capabilities or the cgroup is not mounted. Memory swappiness discarded.
Container gg04kkc4c4g8okw4og840sk4-022428469075  Created
Container gg04kkc4c4g8okw4og840sk4-022428469075  Starting
Container gg04kkc4c4g8okw4og840sk4-022428469075  Started
New container started.
Custom healthcheck found, skipping default healthcheck.
Waiting for healthcheck to pass on the new container.
Waiting for the start period (5 seconds) before starting healthcheck.
[CMD]: docker inspect --format='{{json .State.Health.Status}}' gg04kkc4c4g8okw4og840sk4-022428469075
template parsing error: template: :1:13: executing "" at <.State.Health.Status>: map has no entry for key "Health"
Starting graceful shutdown container: r8wskwwgccwskck0koscc800
[CMD]: docker inspect -f '{{.State.Running}}' r8wskwwgccwskck0koscc800
true
[CMD]: docker rm -f r8wskwwgccwskck0koscc800
r8wskwwgccwskck0koscc800